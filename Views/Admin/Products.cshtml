@model IEnumerable<MenuShop.Models.Product>
@{
    ViewData["Title"] = "Product Management";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h2><i class="fas fa-box me-2"></i>Product Management</h2>
                <a href="@Url.Action("CreateProduct", "Admin")" class="btn btn-primary">
                    <i class="fas fa-plus me-2"></i>Add New Product
                </a>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-info text-center">
                    <i class="fas fa-info-circle fa-2x mb-3"></i>
                    <h5>No products yet</h5>
                    <p>Create the first product to get started.</p>
                    <a href="@Url.Action("CreateProduct", "Admin")" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Create Product
                    </a>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var product in Model)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100">
                        <div class="position-relative">
                            @if (product.Images != null && product.Images.Any())
                            {
                                <img src="@product.Images.First().ImageUrl" class="card-img-top" alt="@product.Name" style="height: 200px; object-fit: cover;">
                            }
                            else if (!string.IsNullOrEmpty(product.ImageUrl))
                            {
                                <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name" style="height: 200px; object-fit: cover;">
                            }
                            else
                            {
                                <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                    <i class="fas fa-image fa-3x text-muted"></i>
                                </div>
                            }
                            <div class="position-absolute top-0 end-0 m-2">
                                <span class="badge bg-@(product.IsActive ? "success" : "danger")">
                                    @(product.IsActive ? "Active" : "Hidden")
                                </span>
                            </div>
                        </div>
                        
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="text-muted small mb-2">
                                <i class="fas fa-tag me-1"></i>@product.Category?.Name
                            </p>
                            
                            @if (!string.IsNullOrEmpty(product.Description))
                            {
                                <p class="card-text small text-muted">@(product.Description.Length > 100 ? product.Description.Substring(0, 100) + "..." : product.Description)</p>
                            }

                            <div class="row text-center mb-3">
                                <div class="col-4">
                                    <small class="text-muted">Price</small><br>
                                    @if (product.IsDiscountActive)
                                    {
                                        <span class="text-decoration-line-through text-muted small">@product.Price.ToString("N0") ₫</span><br>
                                        <span class="fw-bold text-danger">@product.FinalPrice.ToString("N0") ₫</span><br>
                                        <span class="badge bg-danger small">-@product.DiscountPercent%</span>
                                    }
                                    else
                                    {
                                        <span class="fw-bold text-primary">@product.Price.ToString("N0") ₫</span>
                                    }
                                </div>
                                <div class="col-4">
                                    <small class="text-muted">Stock</small><br>
                                    <span class="fw-bold">@product.Stock</span>
                                </div>
                                <div class="col-4">
                                    <small class="text-muted">Created at</small><br>
                                    <span class="fw-bold">@product.CreatedAt.ToString("dd/MM")</span>
                                </div>
                            </div>

                            <div class="mt-auto">
                                <div class="d-flex gap-2 mb-2">
                                    <a href="@Url.Action("EditProduct", "Admin", new { id = product.Id })" class="btn btn-outline-primary btn-sm flex-fill">
                                        <i class="fas fa-edit me-1"></i>Edit
                                    </a>
                                    <button type="button" class="btn btn-outline-success btn-sm flex-fill" onclick="shareProduct('@Url.Action("ProductDetail", "Home", new { id = product.Id }, protocol: Context.Request.Scheme)', '@product.Name')">
                                        <i class="fas fa-share-alt me-1"></i>Share
                                    </button>
                                    <form method="post" action="@Url.Action("DeleteProduct", "Admin")" class="flex-fill" onsubmit="return confirm('Are you sure you want to delete this product?')">
                                        <input type="hidden" name="id" value="@product.Id" />
                                        <button type="submit" class="btn btn-outline-danger btn-sm w-100">
                                            <i class="fas fa-trash me-1"></i>Delete
                                        </button>
                                    </form>
                                </div>
                                
                                @if (!string.IsNullOrEmpty(product.VideoUrl))
                                {
                                    <div class="text-center">
                                        <small class="text-success">
                                            <i class="fas fa-video me-1"></i>Has video
                                        </small>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    .card {
        border: none;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        border-radius: 15px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 20px rgba(0,0,0,0.15);
    }
    
    .btn {
        border-radius: 8px;
        font-weight: 600;
    }
    
    .badge {
        font-size: 0.75rem;
    }
</style>

<script>
function shareProduct(link, name) {
    if (navigator.share && /Mobi|Android|iPhone|iPad|iPod|Mobile|Tablet/i.test(navigator.userAgent)) {
        navigator.share({
            title: name,
            text: 'Check out this product!',
            url: link
        }).catch(() => {});
    } else {
        navigator.clipboard.writeText(link).then(function() {
            showToast('Product link copied!');
        });
    }
}
function showToast(msg) {
    let toast = document.createElement('div');
    toast.innerText = msg;
    toast.style.position = 'fixed';
    toast.style.bottom = '30px';
    toast.style.left = '50%';
    toast.style.transform = 'translateX(-50%)';
    toast.style.background = '#28a745';
    toast.style.color = '#fff';
    toast.style.padding = '10px 24px';
    toast.style.borderRadius = '8px';
    toast.style.zIndex = 9999;
    toast.style.fontWeight = 'bold';
    document.body.appendChild(toast);
    setTimeout(() => { toast.remove(); }, 1800);
}
</script> 